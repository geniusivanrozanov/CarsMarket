version: "3.9"

services:
  identity.api:
    container_name: identity.api
    ports:
      - "8000:8080"
    environment:
      - ElasticConfiguration:Uri=http://elasticsearch:9200
      - ConnectionStrings:IdentityPostgres=Server=postgres;Port=5432;Database=Identity;User Id=postgres;Password=postgres;
      - ConnectionStrings:Redis=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_started
  
  postgres:
    container_name: postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  
  redis:
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - redis_data:/data
    
  elasticsearch:
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
  
  kibana:
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_started
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200


volumes:
  postgres_data:
  elasticsearch_data:
  redis_data:
